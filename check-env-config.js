#!/usr/bin/env node

async function checkEnvConfig() {
  console.log('üîç Verificando configura√ß√£o das vari√°veis de ambiente...')
  
  // Simular as vari√°veis de ambiente do frontend
  const env = {
    VITE_EVOLUTION_API_URL: 'https://evolution.elevroi.com.br',
    VITE_EVOLUTION_API_KEY: 'cvlGHKHMdf1bv6WYBGOr516WjEanxSxB',
    VITE_EVOLUTION_INSTANCE_NAME: 'elevroi'
  }
  
  console.log('\nüîç Teste 1: Verificando vari√°veis de ambiente...')
  console.log('   VITE_EVOLUTION_API_URL:', env.VITE_EVOLUTION_API_URL)
  console.log('   VITE_EVOLUTION_API_KEY:', env.VITE_EVOLUTION_API_KEY ? '***' + env.VITE_EVOLUTION_API_KEY.slice(-4) : 'undefined')
  console.log('   VITE_EVOLUTION_INSTANCE_NAME:', env.VITE_EVOLUTION_INSTANCE_NAME)
  
  // Teste 2: Verificar se as URLs est√£o corretas
  console.log('\nüîç Teste 2: Verificando URLs...')
  const baseURL = env.VITE_EVOLUTION_API_URL
  const wsUrl = baseURL.replace(/^https/, 'wss')
  console.log('   Base URL:', baseURL)
  console.log('   WebSocket URL:', wsUrl)
  console.log('   URL completa:', `${wsUrl}/socket.io/`)
  
  // Teste 3: Verificar configura√ß√£o do WebSocket
  console.log('\nüîç Teste 3: Configura√ß√£o do WebSocket...')
  const webSocketConfig = {
    baseURL: env.VITE_EVOLUTION_API_URL || 'http://localhost:8080',
    apiKey: env.VITE_EVOLUTION_API_KEY || 'your-api-key',
    instanceName: env.VITE_EVOLUTION_INSTANCE_NAME || 'elevroi'
  }
  
  console.log('   Base URL configurada:', webSocketConfig.baseURL)
  console.log('   API Key configurada:', webSocketConfig.apiKey ? '***' + webSocketConfig.apiKey.slice(-4) : 'undefined')
  console.log('   Instance Name configurada:', webSocketConfig.instanceName)
  
  // Teste 4: Verificar se as URLs s√£o v√°lidas
  console.log('\nüîç Teste 4: Validando URLs...')
  try {
    const url = new URL(baseURL)
    console.log('   ‚úÖ Base URL √© v√°lida:', url.toString())
  } catch (error) {
    console.log('   ‚ùå Base URL inv√°lida:', error.message)
  }
  
  try {
    const wsUrlObj = new URL(wsUrl)
    console.log('   ‚úÖ WebSocket URL √© v√°lida:', wsUrlObj.toString())
  } catch (error) {
    console.log('   ‚ùå WebSocket URL inv√°lida:', error.message)
  }
  
  // Teste 5: Verificar se as configura√ß√µes est√£o corretas
  console.log('\nüîç Teste 5: Verificando configura√ß√µes...')
  
  if (!webSocketConfig.baseURL || webSocketConfig.baseURL === 'http://localhost:8080') {
    console.log('   ‚ö†Ô∏è Base URL n√£o configurada ou √© padr√£o')
  } else {
    console.log('   ‚úÖ Base URL configurada corretamente')
  }
  
  if (!webSocketConfig.apiKey || webSocketConfig.apiKey === 'your-api-key') {
    console.log('   ‚ö†Ô∏è API Key n√£o configurada ou √© padr√£o')
  } else {
    console.log('   ‚úÖ API Key configurada corretamente')
  }
  
  if (!webSocketConfig.instanceName || webSocketConfig.instanceName === 'elevroi') {
    console.log('   ‚ö†Ô∏è Instance Name n√£o configurada ou √© padr√£o')
  } else {
    console.log('   ‚úÖ Instance Name configurada corretamente')
  }
  
  // Teste 6: Simular configura√ß√£o do frontend
  console.log('\nüîç Teste 6: Simulando configura√ß√£o do frontend...')
  const defaultWebSocketConfig = {
    baseURL: env.VITE_EVOLUTION_API_URL || 'http://localhost:8080',
    apiKey: env.VITE_EVOLUTION_API_KEY || 'your-api-key',
    instanceName: env.VITE_EVOLUTION_INSTANCE_NAME || 'elevroi'
  }
  
  console.log('   Configura√ß√£o padr√£o:', {
    baseURL: defaultWebSocketConfig.baseURL,
    apiKey: defaultWebSocketConfig.apiKey ? '***' + defaultWebSocketConfig.apiKey.slice(-4) : 'undefined',
    instanceName: defaultWebSocketConfig.instanceName
  })
  
  // Teste 7: Verificar se h√° problemas conhecidos
  console.log('\nüîç Teste 7: Verificando problemas conhecidos...')
  
  if (baseURL.includes('localhost') || baseURL.includes('127.0.0.1')) {
    console.log('   ‚ö†Ô∏è Usando localhost - pode n√£o funcionar em produ√ß√£o')
  }
  
  if (baseURL.startsWith('http://')) {
    console.log('   ‚ö†Ô∏è Usando HTTP - considere usar HTTPS para produ√ß√£o')
  }
  
  if (!baseURL.includes('evolution.elevroi.com.br')) {
    console.log('   ‚ö†Ô∏è URL n√£o √© a esperada para produ√ß√£o')
  }
  
  console.log('\n‚úÖ Verifica√ß√£o de configura√ß√£o conclu√≠da')
  console.log('\nüí° Se houver problemas:')
  console.log('   1. Verifique se as vari√°veis de ambiente est√£o definidas')
  console.log('   2. Verifique se as URLs est√£o corretas')
  console.log('   3. Verifique se a API key est√° correta')
  console.log('   4. Verifique se a inst√¢ncia existe no servidor')
}

checkEnvConfig() 